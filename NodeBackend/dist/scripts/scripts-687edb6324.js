"use strict";angular.module("menuApp",["ngMaterial","ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ui.router"]).config(["$stateProvider","$urlRouterProvider","$sceDelegateProvider",function(e,r,t){r.otherwise("/cart"),e.state("root",{url:"",templateUrl:"views/mainView.html",controller:"mainController",controllerAs:"vm",abstract:!0}).state("root.cart",{url:"/cart",templateUrl:"views/cartView.html",controller:"cartController",controllerAs:"vm"}).state("root.history",{url:"/history",templateUrl:"views/historyView.html",controller:"historyController",controllerAs:"vm"}).state("root.order",{url:"/order",templateUrl:"views/orderView.html",controller:"ordersController",controllerAs:"vm"}),t.resourceUrlWhitelist(["self","http://localhost:5000/**"])}]),angular.module("menuApp").factory("httpService",["$http",function(e){return{backendAdress:"http://localhost:5000",getDish:function(r){return e({url:this.backendAdress+"/api/getDish?dishId="+r,method:"GET"}).then(function(e){return e.data.err?{errMsg:e.data.err.errorMsg}:e.data.rows?0==e.data.rows.length?{errMsg:"Invalid request id!"}:e.data.rows[0]:void 0},function(e){return{errMsg:"Cant get from backend "+e.data}})},getUserOrders:function(r){return e({url:this.backendAdress+"/api/getUserOrders?name="+r,method:"GET"}).then(function(e){return e.data.err?(window.alert("Error! Database is offline."),[]):e.data.rows},function(e){return{msg:"Backend is not responding "+e.data}})},cancelOrder:function(r){return e({url:this.backendAdress+"/api/deleteOrder?id="+r,method:"POST"}).then(function(e){return e.data},function(e){return{msg:"Cant get from backend "+e.data}})},sendOrder:function(r){return e({url:this.backendAdress+"/api/postOrder",method:"POST",data:r,headers:{"Content-Type":"application/json"}}).then(function(e){return e},function(e){return"error sending to node: "+e.data})}}}]),angular.module("menuApp").factory("stateSharingService",function(){return{orders:[],orderPrice:0}}),angular.module("menuApp").controller("mainController",["$scope","stateSharingService",function(e,r){var t=this;t.orderCount=r.orders.length,e.$watch(function(){return r.orders.length},function(){t.orderCount=r.orders.length})}]),angular.module("menuApp").config(["$sceDelegateProvider",function(e){e.resourceUrlWhitelist(["self","http://localhost:5000/**"])}]),angular.module("menuApp").controller("cartController",["httpService","stateSharingService",function(e,r){var t=this;t.basketPrice=0,t.basket=[],t.addDish=function(r){e.getDish(r).then(function(e){if(e.errMsg)window.alert(e.errMsg);else{var r=!1;t.basket.forEach(function(n){if(n.itemId==e.key)return n.count+=1,t.basketPrice=(parseFloat(t.basketPrice)+parseFloat(e.value[1])).toFixed(2),void(r=!0)}),r||(t.basketPrice=(parseFloat(t.basketPrice)+parseFloat(e.value[1])).toFixed(2),t.basket.push({name:e.value[0],itemId:e.key,price:e.value[1],count:1}))}})},t.removeDishSingle=function(e){var r=t.basket.indexOf(e);t.basket[r].count-=1,0===t.basket[r].count&&t.basket.splice(r,1),t.basketPrice=(parseFloat(t.basketPrice)-parseFloat(e.price)).toFixed(2)},t.removeDishAll=function(e){var r=t.basket.indexOf(e);t.basketPrice=(parseFloat(t.basketPrice)-parseFloat(parseFloat(e.price)*e.count)).toFixed(2),t.basket[r].count=0,t.basket.splice(r,1)},t.getMenu=function(){return 2===t.menuRetrieved?void window.alert("Menu already retrieved!"):1===t.menuRetrieved?void window.alert("Menu is being retrieved!"):(t.menuRetrieved=1,void e.getMenu().then(function(e){e?e.errMsg?(t.menuRetrieved=0,window.alert(e.errMsg)):e.data&&(t.menu=e.data,t.menuRetrieved=2):(t.menuRetrieved=0,window.alert("Uncaught error!"))}))},t.finishOrder=function(){var e={};for(e.foods=[];t.basket.length>0;){var n={name:t.basket[0].name,price:t.basket[0].price,count:t.basket[0].count,imageLink:t.basket[0].imageLink,itemId:t.basket[0].itemId};e.foods.push(n),t.basket.splice(0,1)}e.price=t.basketPrice,e.buyerName=t.buyerName,t.basketPrice=0,t.buyerName="",r.orders.push(e),console.log(r.orders.length)}}]),angular.module("menuApp").controller("historyController",["httpService","$cookies",function(e,r){var t=this;t.history=[{date:"2017-04-15 15:33",orderId:"3345",price:34.25,buyer:"Matas",dishes:[{name:"Burokas",price:6.66,count:5,itemId:12,imageLink:"images/fish.png"},{name:"Kopustas",price:10.15,count:1,itemId:5,imageLink:"images/fish.png"}]},{date:"2017-12-12 16:45",orderId:"3",price:105.25,buyer:"Kulkovas",dishes:[{name:"Kiau≈°iniai",price:12.33,count:5,itemId:10,imageLink:"images/fish.png"}]}],t.noOrdersFound=!0,t.buyerName="",t.toggleOrder=function(e){for(var r=0;r<t.history.length;r++)t.history[r].expanded=r===e&&!t.history[r].expanded},t.getUserOrders=function(r){t.noOrdersFound=!1,t.history=[],e.getUserOrders(r).then(function(e){if(e.msg)return void window.alert(e.msg);e.forEach(function(e){e.expanded=!1,t.history.push(e)}),0===t.history.length&&(t.noOrdersFound=!0)})},t.cancelOrder=function(r){e.cancelOrder(r.id).then(function(e){e.err?window.alert(e.err):(t.history.splice(t.history.indexOf(r),1),window.alert(e))},function(e){window.alert(e)})}}]),angular.module("menuApp").controller("ordersController",["httpService","stateSharingService",function(e,r){var t=this;t.orderPrice=r.orderPrice,t.orders=r.orders,t.sendOrder=function(r){if(0==t.orders.length)return void window.alert("Cart is empty!");var n=angular.toJson({dishes:r.foods,buyer:r.buyerName});e.sendOrder(n).then(function(e){if(e.data.err)window.alert("Can't find DB.");else{var n=t.orders.indexOf(r);t.orders.splice(n,1),window.alert(e.data)}},function(e){window.alert(e)})}}]),angular.module("menuApp").directive("cartItemDirective",function(){return{scope:{imageLink:"@",title:"@",count:"@",price:"@",removeFn:"&",addFn:"&",removeAllFn:"&"},templateUrl:"views/directives/cartItemDirective.html",link:function(e,r,t){e.imageLink=t.imagelink,e.parsePrice=function(){return parseFloat(parseFloat(e.price)*e.count).toFixed(2)}}}}),angular.module("menuApp").directive("orderItemDirective",function(){return{scope:{imageLink:"@",title:"@",count:"@",price:"@"},templateUrl:"views/directives/orderItemDirective.html",link:function(e,r,t){e.imageLink=t.imagelink,e.parsePrice=function(){return parseFloat(parseFloat(e.price)*e.count).toFixed(2)}}}});